// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Users who can create events or RSVP
model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  events    Event[]  @relation("UserEvents")
  rsvps     RSVP[]
  createdAt DateTime @default(now())
}

// Events that users create
model Event {
  id          Int      @id @default(autoincrement())
  title       String
  description String?
  location    String
  date        DateTime
  creator     User     @relation("UserEvents", fields: [creatorId], references: [id])
  creatorId   Int
  rsvps       RSVP[]
  createdAt   DateTime @default(now())
}

// RSVP for users attending events
model RSVP {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  event     Event    @relation(fields: [eventId], references: [id])
  eventId   Int
  status    String   @default("pending") // "pending", "attending", "declined"
  createdAt DateTime @default(now())

  @@unique([userId, eventId]) // prevent duplicate RSVPs
}